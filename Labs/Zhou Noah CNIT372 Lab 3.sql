/*
Noah Zhou
CNIT372 Lab Section 006
Estimated Time Spent: 5 hour
Late hours used: [0]
*/

/* PART A */

-- Question #1
/* Q1 Query Results

Error starting at line : 2 in command -
begin
    DBMS_OUTPUT_.PUT_LINE ('Hello World');
end;
Error report -
ORA-06550: line 2, column 5:
PLS-00201: identifier 'DBMS_OUTPUT_.PUT_LINE' must be declared
ORA-06550: line 2, column 5:
PL/SQL: Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:

*/

-- Question #2
/* Q2 Query Results

No Output

*/

-- Question #3
/* Q3 Query Results

Hello World

Hello World

SQL Developer does "remember" the SERVEROUTPUT preference.

*/

-- Question #4
/* Q4 Non-Query Answer

"The SERVEROUTPUT setting controls whether SQL*Plus prints the output generated by the DBMS_OUTPUT package from PL/SQL procedures."

https://www.oreilly.com/library/view/oracle-sqlplus-the/0596007469/re85.html
*/

-- Question #5
/* Q5 Query Results

The Ubituitous Hello World

*/

-- Question #6
/* Q6 Query Result

The Ubituitous Hello World

*/

-- Question #7
/* Q7 Non-Query Answer

I believe the difference is in the "LINE". I believe this starts each string on
a new line

*/

-- Question #8
/* Q8 Non-Query Answer

The PUT procedure places a line in the buffer.

https://docs.oracle.com/cd/E21901_01/timesten.1122/e21645/d_output.htm#TTPLP71202
*/

-- Question #9
/* Q9 Non-Query Answer

The PUT_LINE procedure places a partial line in the buffer.

https://docs.oracle.com/cd/E21901_01/timesten.1122/e21645/d_output.htm#TTPLP71202

*/

-- Question 10
/* Q10 Non-Query Answer

Based on the definitions in Question 8 and 9, the difference is that PUT places
a full line in the buffer while PUT_LINE places a partial line in the buffer

*/

-- Question #11
/* Q11 Query Results

A user input popup appears and asked to enter value for "sv_Yourname"

Error starting at line : 1 in command -
begin
    DBMS_OUTPUT.PUT_LINE ('My name is ' || 'Noah);
end;
Error report -
ORA-06550: line 2, column 44:
PLS-00103: Encountered the symbol "Noah);
end;" when expecting one of the following:

   ( - + case mod new null <an identifier>
   <a double-quoted delimited-identifier> <a bind variable>
   continue avg count current max min prior sql stddev sum
   variance execute forall merge time timestamp interval date
   <a string literal with character set specification>
   <a number> <a single-quoted SQL string> pipe
   <an alternatively-quoted string literal with character set specification>
   <an alternatively-
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:

*/

-- Question #12
/* Q12 Query Results

No Output

*/

-- Question #13
/* Q13 Query Results

old:begin
    DBMS_OUTPUT.PUT_LINE ('My name is ' || '&sv_Yourname');
end;
new:begin
    DBMS_OUTPUT.PUT_LINE ('My name is ' || 'Noah');
end;

PL/SQL procedure successfully completed.

My name is Noah

*/

-- Question #14
/* Q14 Query Results

No Output

*/

-- Question #15
/* Q15 Query Results

Error starting at line : 1 in command -
begin
    DBMS_OUTPUT.PUT_LINE ('My name is ' || 'Noah);
end;
Error report -
ORA-06550: line 2, column 44:
PLS-00103: Encountered the symbol "Noah);
end;" when expecting one of the following:

   ( - + case mod new null <an identifier>
   <a double-quoted delimited-identifier> <a bind variable>
   continue avg count current max min prior sql stddev sum
   variance execute forall merge time timestamp interval date
   <a string literal with character set specification>
   <a number> <a single-quoted SQL string> pipe
   <an alternatively-quoted string literal with character set specification>
   <an alternatively-
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:

*/

-- Question #16
/* Q16 Non-Query Answer

The VERIFY setting controls whether or not SQL*Plus displays before and after images of each line that contains a substitution variable.

https://www.oreilly.com/library/view/oracle-sqlplus-the/0596007469/re106.html

*/

-- Question #17
/* Q17 Non-Query Answer

When I ran the PL/SQL code twice, I was prompted for substitution twice but I
was forced to run and enter user input and then run and enter user input again.
This implies that there is no persistence of inputted values

*/

-- Question #18
/* Q18 Non-Query Answer

Yes you can, the user is prompted twice for the days and they can enter two
separate days

*/

-- Question #19
/* Q19 Query Results

Today is Sunday
Tomorrow is Sunday

I was not prompted for a value for the second sv_day. What caused this was the
second & symbol included when the first DBMS_OUTPUT line of code was ran.

*/

-- Question #20
/* Q20 Query Results

Today is Sunday
Tomorrow is Sunday

I was not prompted for the variable sv_day. This implies that there is variable
persistence using the && command

*/

-- Question #21
/* Q21 Query Results

Today is Sunday

*/

-- Question #22
/* Q22 Query Results

Today is Sunday
Today is Sunday

*/

-- Question #23
/* Q23 Query Results

One row is returned

*/

-- Question #24
/* Q24 Query Results

EMPLOYEEID         LASTNAME       FIRSTNAME
=============================================
100001            Manaugh        Jim

*/

-- Question #25
/* Q25 Query Results

40 rows are returned

*/

-- Question #26
/* Q26 Query Results

Error starting at line : 1 in command -
declare
    V_EMPLOYEEID EMPLOYEE.EMPLOYEEID%TYPE;
    V_LASTNAME EMPLOYEE.LASTNAME%TYPE;
    V_FIRSTNAME EMPLOYEE.FIRSTNAME%TYPE;
begin
    SELECT EMPLOYEEID, LASTNAME, FIRSTNAME
    INTO V_EMPLOYEEID, V_LASTNAME, V_FIRSTNAME
    FROM EMPLOYEE

    DBMS_OUTPUT.PUT_LINE ('EMPLOYEEID         LASTNAME       FIRSTNAME');
    DBMS_OUTPUT.PUT_LINE ('=============================================');
    DBMS_OUTPUT.PUT (V_EMPLOYEEID);
    DBMS_OUTPUT.PUT ('            ');
    DBMS_OUTPUT.PUT (V_LASTNAME);
    DBMS_OUTPUT.PUT ('        ');
    DBMS_OUTPUT.PUT_LINE (V_FIRSTNAME);
end;
Error report -
ORA-06550: line 10, column 16:
PL/SQL: ORA-00933: SQL command not properly ended
ORA-06550: line 6, column 5:
PL/SQL: SQL Statement ignored
06550. 00000 -  "line %s, column %s:\n%s"
*Cause:    Usually a PL/SQL compilation error.
*Action:

*/

-- Question #27
/* Q27 Non-Query Answer

I am trying to insert 40 values to each of the variables. I am unsuccessful
and PL/SQL throws an exception

*/

-- Question #28
/* Q28 Non-Query Answer

Only one value can be held at a time

*/

-- Question #29
/* Q29 Query Results

EMPLOYEEID        LASTNAME       FIRSTNAME
==========================================
100001          Manaugh           Jim

Only one variable is created and within that variable, all the columns are
called instead of individual variables calling individual columns.

*/

-- Question #30
/* Q30 Non-Query Answer

area_code VARCHAR2(3);

*/

-- Question #31A
/* Q31A Non-Query Answer

declare
    maxCustomers NUMBER;
begin
    SELECT MAX(CustomerCount)
    INTO maxCustomers
    FROM (
        SELECT COUNT(*) AS CustomerCount
        FROM Customers
        GROUP BY SUBSTR(PhoneNumber, 1, 3)
    );
END;

*/

-- Question #31B
/* Q31B Non-Query Answer

declare
    maxCustomers NUMBER;
    maxAreaCode varchar2(3)
begin
    SELECT SUBSTR(phoneNumber, 1, 3), MAX(CustomerCount)
    INTO maxAreaCode, maxCustomers
    FROM (
        SELECT COUNT(*) AS CustomerCount
        FROM Customers
        GROUP BY SUBSTR(PhoneNumber, 1, 3)
        ORDER BY CustomerCount DESC
    );
    DBMS_OUTPUT.PUT_LINE('Area code with the largest number of customers: ' || maxAreaCode);
END;

*/

/* PART B*/

-- Question #1
/* Q1 Non-Query Answer

BEGIN
    DBMS_OUTPUT.PUT_LINE('Current Date: ' || TO_CHAR(SYSDATE, 'YYYY-MM-DD'));
END;

*/

-- Question #2
/* Q2 Non-Query Answer

BEGIN
    DBMS_OUTPUT.PUT_LINE('Current Date: ' || TO_CHAR(SYSDATE, 'Day');
    DBMS_OUTPUT.PUT_LINE('Current Date: ' || TO_CHAR(ADD_MONTHS(SYSDATE, -12)'Day'));
END;

*/

-- Question #3
/* Q3 Non-Query Answer

PUT places a full line in the buffer while PUT_LINE
places a partial line in the buffer

*/


-- Question #4

declare
    birthDate DATE := TO_DATE('2002-05-18', 'YYYY-MM-DD'); -- Replace with your actual birth date
    today DATE := SYSDATE;
    age NUMBER;
begin
    age := TRUNC(MONTHS_BETWEEN(today, birthDate) / 12);
    DBMS_OUTPUT.PUT_LINE('Name: Noah Zhou');
    DBMS_OUTPUT.PUT_LINE('Birth Date: ' || TO_CHAR(birthDate, 'YYYY-MM-DD'));
    DBMS_OUTPUT.PUT_LINE('Age: ' || age || ' years old');
end;

/* Q4 Query Results

Name: Noah Zhou
Birth Date: 2002-05-18
Age: 22 years old

*/


-- Question #5
/* Q5 Non-Query Answer

birthDate can be declared as a constant.

*/


-- Question #6
/* Q6 Non-Query Answer

SELECT Supervisor, COUNT (*) AS NumberSupervised
FROM Employee
GROUP BY Supervisor
ORDER BY Supervisor
FETCH FIRST 1 ROW ONLY;

*/


-- Question #7
/* Q7 Non-Query Answer

declare
    V_Supervisor Employee.EmployeeID%TYPE;
    V_FirstName Employee.FirstName%TYPE;
    V_LastName Employee.LastName%TYPE;
    V_NumberSupervised NUMBER;
begin
    SELECT Supervisor, COUNT(*) AS NumberSupervised
    INTO V_Supervisor, V_NumberSupervised
    FROM Employee
    GROUP BY Supervisor
    ORDER BY NumberSupervised DESC
    FETCH FIRST 1 ROWs ONLY;

    SELECT FirstName, LastName
    INTO V_FirstName, V_LastName
    FROM Employee
    WHERE EmployeeID = V_Supervisor;

    DBMS_OUTPUT.PUT_LINE ('Supervisor: ' || V_FirstName || ' ' || V_LastName);
    DBMS_OUTPUT.PUT_LINE ('Number of employees supervised: ' || V_NumberSupervised);
end;


*/


-- Question #8
/* Q8 Non-Query Answer

SELECT Supervisor, COUNT(*) AS NumberSupervised
FROM Employee
GROUP BY Supervisor
ORDER BY NumberSupervised DESC;

The query will return the Supervisors and the count of all rows as number of
employees supervised and group the results by Supervisor and will order the
results so that the Supervisor with the highest number of employees supervised
will appear at the first row

*/


-- Question #9

DECLARE
    V_Supervisor Employee.EmployeeID%TYPE;
    V_NumberSupervised NUMBER;
BEGIN
    SELECT Supervisor, COUNT(*) AS NumberSupervised
    INTO V_Supervisor, V_NumberSupervised
    FROM Employee
    GROUP BY Supervisor
    ORDER BY NumberSupervised DESC;

    DBMS_OUTPUT.PUT_LINE('Supervisor ID: ' || V_Supervisor);
    DBMS_OUTPUT.PUT_LINE('Number of employees supervised: ' ||V_NumberSupervised);
END;

/* Q9 Query Results

Error starting at line : 1 in command -
DECLARE
    V_Supervisor Employee.EmployeeID%TYPE;
    V_NumberSupervised NUMBER;
BEGIN
    SELECT Supervisor, COUNT(*) AS NumberSupervised
    INTO V_Supervisor, V_NumberSupervised
    FROM Employee
    GROUP BY Supervisor
    ORDER BY NumberSupervised DESC;

    DBMS_OUTPUT.PUT_LINE('Supervisor ID: ' || V_Supervisor);
    DBMS_OUTPUT.PUT_LINE('Number of employees supervised: ' ||V_NumberSupervised);
END;
Error report -
ORA-01422: exact fetch returns more than requested number of rows
ORA-06512: at line 5
01422. 00000 -  "exact fetch returns more than requested number of rows"
*Cause:    The number specified in exact fetch is less than the rows returned.
*Action:   Rewrite the query or change number of rows requested

*/


-- Question #10
/* Q10 Query Results

Error starting at line : 1 in command -
DECLARE
myname varchar2(10) NOT NULL := '';
BEGIN
dbms_output.put_line('my name is '|| myname);
END;
Error report -
ORA-06502: PL/SQL: numeric or value error
ORA-06512: at line 2
06502. 00000 -  "PL/SQL: numeric or value error%s"
*Cause:    An arithmetic, numeric, string, conversion, or constraint error
           occurred. For example, this error occurs if an attempt is made to
           assign the value NULL to a variable declared NOT NULL, or if an
           attempt is made to assign an integer larger than 99 to a variable
           declared NUMBER(2).
*Action:   Change the data, how it is manipulated, or how it is declared so
           that values do not violate constraints.


To fix this error, a non-null value needs to be assigned to the empty single
quotes in the declaration.

*/


-- Question #11
/* Q11 Query Results

Error starting at line : 1 in command -
DECLARE
myname CONSTANT varchar2(10) NOT NULL := '';
BEGIN
dbms_output.put_line('my name is '|| myname);
END;
Error report -
ORA-06502: PL/SQL: numeric or value error
ORA-06512: at line 2
06502. 00000 -  "PL/SQL: numeric or value error%s"
*Cause:    An arithmetic, numeric, string, conversion, or constraint error
           occurred. For example, this error occurs if an attempt is made to
           assign the value NULL to a variable declared NOT NULL, or if an
           attempt is made to assign an integer larger than 99 to a variable
           declared NUMBER(2).
*Action:   Change the data, how it is manipulated, or how it is declared so
           that values do not violate constraints.


*/


-- Question #12
/* Q12 Non-Query Answer

Yes, the same fix will work because the non-null value in single quotes is
empty and to fix it, a non-null value needs to be assigned to the empty
single quotes in the declaration.

*/


-- Question #13
/* Q13 Non-Query Answer

2nd_Variable

*/


-- Question #14
/* Q14 Non-Query Answer

The part that will cause an error is the declaration of c_id in the outer block
as varchar2 and the declaration of c_id as an integer in the inner block. A
way to fix this would to declare c_id as varchar2 in the inner block.

*/


-- Question #15
/* Q15 Non-Query Answer

The parts where the variable names of c_id and o_id are declared will not cause
problems but should be changed so that the variable names are clear. C_id
should be Customer_ID and o_id should be Order_ID.

*/


-- Question #16
/* Q16 Query Answer

The result would be C-300001 for both c_ids.

*/


-- Question #17
/* Q17 Query Answer

The result would be 2001000741 for both o_ids

*/


-- Question #18
/* Q18 Non-Query Answer

declare
    V_HeaviestPowerPart VARCHAR2(100);
    V_HeaviestPowerWeight NUMBER;

    v_HeaviestSoftwarePart VARCHAR2(100);
    v_HeaviestSoftwareWeight NUMBER;
begin
    SELECT PartDescription, Weight
    INTO V_HeaviestPowerPart, V_HeaviestPowerWeight
    FROM InventoryPart
    WHERE CategoryID = 'POW'
    ORDER BY Weight DESC
    FETCH FIRST ROW ONLY;


    SELECT PartDescription, Weight
    INTO V_HeaviestSoftwarePart, V_HeaviestSoftwareWeight
    FROM InventoryPart
    WHERE CategoryID = 'SOFT'
    ORDER BY Weight DESC
    FETCH FIRST ROW ONLY;

    -- Display the result
    DBMS_OUTPUT.PUT_LINE('The heaviest part in the Power category is ' || V_HeaviestPowerPart ||
                         ', and the heaviest part in the Software category is ' || V_HeaviestSoftwarePart || '.');
END;

*/
